version: "3.7"

services:

  #database:
  #image: postgres
  #restart: always
  #volumes:
  #- ./data:/var/lib/postgresql/data

  backend:
    build:
      context: ./server
      target: production
    container_name: server
    restart: always
    volumes: [ './server/:/app' ]
    ports:
      - 8090:8090
    environment:
      - HOST_NAME=localhost:8091 # nginx redirect from frontend host name

  frontend:
    build:
      context: ./client
      target: production
    container_name: client
    restart: always
    ports:
      - 8091:8091
      - 80:8091 # hostport:containerport
    links:
      - "backend"

### For docker running both backend/frontend and dev/prod env
# docker-compose -f docker-compose.yml up --build
# docker-compose -f docker-compose.prod.yml up --build
###

### This make for Azure App Service docker-compose configuration
# WEBSITES_CONTAINER_START_TIME_LIMIT = 1800
# SCM_DO_BUILD_DURING_DEPLOYMENT = 1
# WEBSITES_PORT = 8091
###
# docker login <registry-name>.azurecr.io --username <registry-username>
# docker tag appsvc-tutorial-custom-image <registry-name>.azurecr.io/appsvc-tutorial-custom-image:latest
# docker push <registry-name>.azurecr.io/appsvc-tutorial-custom-image:latest
###
# docker login giveandtake.azurecr.io --username giveandtake
# docker tag giveandtake-backend giveandtake.azurecr.io/backend:latest
# docker tag giveandtake-frontend giveandtake.azurecr.io/frontend:latest
# docker push giveandtake.azurecr.io/backend:latest
# docker push giveandtake.azurecr.io/frontend:latest
###

# version: "3.7"

# services:

#   backend:
#     image: giveandtake.azurecr.io/backend:latest
#     ports:
#       - 8090:8090
#     environment:
#       - HOST_NAME=giveandtake.azurewebsites.net # frontend host name

#   frontend:
#     image: giveandtake.azurecr.io/frontend:latest
#     ports:
#       - 80:8091 # hostport:containerport