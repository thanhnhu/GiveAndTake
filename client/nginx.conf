#include /etc/nginx/mime.types;

upstream backend {
  server giveandtake-api.onrender.com;
  #server backend:8090; # docker compose container host
  #server 127.0.0.1:8090;
  #server localhost:8090;
  #server host.docker.internal:8090; # docker internal host # error on azure app service
}

server {
  listen 80;
  #listen 8091;
  #listen 443 ssl;
  #root /usr/share/nginx/html;
  #server_name mywebsite.com;
  #return 301 https://$host$request_uri;
  client_max_body_size 10m; # limit upload file size 10M
  #ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
  #ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

  #ssl_protocols TLSv1.2 TLSv1.3;
  #ssl_ciphers HIGH:!aNULL:!MD5;

  location / {
    root /usr/share/nginx/html;
    index index.html index.htm;
  }

  location /api {
    proxy_pass https://backend/api;
    #proxy_http_version 1.1;
    #proxy_set_header Connection "";
    proxy_ssl_verify off;
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    #proxy_set_header Authorization $http_authorization;

    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
    add_header Access-Control-Allow-Headers 'Authorization, Content-Type';
  }

  location /docs {
    proxy_pass https://backend/docs;
    #proxy_http_version 1.1;
    #proxy_set_header Connection "";

    proxy_ssl_verify off;
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    #proxy_set_header Authorization $http_authorization;

    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
    add_header Access-Control-Allow-Headers 'Authorization, Content-Type';
  }

  ### not use, instead use docker volumes to share static files
  location /images {
    proxy_pass https://backend/images;
    #proxy_http_version 1.1;
    #proxy_set_header Connection "";

    proxy_ssl_verify off;
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    #proxy_set_header Authorization $http_authorization;

    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
    add_header Access-Control-Allow-Headers 'Authorization, Content-Type';
    
    # types {
    #   image/gif gif;
    #   image/jpeg jpeg jpg;
    #   image/png png;
    # }
  }

  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root /usr/share/nginx/html;
  }
}